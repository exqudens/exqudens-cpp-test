cmake_minimum_required(VERSION 3.20)
get_filename_component(RAW_NAME "${CMAKE_CURRENT_SOURCE_DIR}" NAME)
string(REPLACE " " "_" NAME "${RAW_NAME}")
file(READ "${CMAKE_CURRENT_SOURCE_DIR}/version.txt" RAW_VERSION)
string(STRIP "${RAW_VERSION}" VERSION)
project("${NAME}" VERSION "${VERSION}")

message("project: '${PROJECT_NAME}-${PROJECT_VERSION}'")

message(STATUS "CMAKE_VERSION: '${CMAKE_VERSION}'")
if(MSVC)
    message(STATUS "ENV.INCLUDE: '$ENV{INCLUDE}'")
    message(STATUS "ENV.LIBPATH: '$ENV{LIBPATH}'")
    message(STATUS "ENV.LIB: '$ENV{LIB}'")
endif()
message(STATUS "ENV.PATH: '$ENV{PATH}'")
message(STATUS "CMAKE_AR: '${CMAKE_AR}'")
message(STATUS "CMAKE_CXX_COMPILER: '${CMAKE_CXX_COMPILER}'")
message(STATUS "CMAKE_C_COMPILER: '${CMAKE_C_COMPILER}'")
message(STATUS "CMAKE_LINKER: '${CMAKE_LINKER}'")
message(STATUS "CMAKE_MT: '${CMAKE_MT}'")
message(STATUS "CMAKE_RC_COMPILER: '${CMAKE_RC_COMPILER}'")

if(NOT DEFINED "CMAKE_MSVC_RUNTIME_LIBRARY")
    set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreadedDLL")
endif()

if("${BUILD_SHARED_LIBS}")
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
    set(CMAKE_CXX_VISIBILITY_PRESET "default")
    set(CMAKE_VISIBILITY_INLINES_HIDDEN FALSE)
else()
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS FALSE)
    set(CMAKE_CXX_VISIBILITY_PRESET "hidden")
    set(CMAKE_VISIBILITY_INLINES_HIDDEN TRUE)
    if("${MINGW}")
        set(CMAKE_CXX_STANDARD_LIBRARIES "-static-libgcc -static-libstdc++ ${CMAKE_CXX_STANDARD_LIBRARIES}")
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-Bstatic,--whole-archive -lwinpthread -Wl,--no-whole-archive")
    endif()
endif()

set(CMAKE_OBJECT_PATH_MAX 1000)
set(CMAKE_SHARED_LIBRARY_PREFIX "")
set(CMAKE_SHARED_MODULE_PREFIX "")
set(CMAKE_STATIC_LIBRARY_PREFIX "")
set(CMAKE_IMPORT_LIBRARY_PREFIX "")
set(CMAKE_STAGING_PREFIX "")
set(CMAKE_FIND_LIBRARY_PREFIXES "")
set(CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH FALSE)
set(CMAKE_FIND_USE_CMAKE_SYSTEM_PATH FALSE)
set(CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH FALSE)
set(CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY FALSE)
set(CMAKE_FIND_USE_PACKAGE_REGISTRY FALSE)
set(CMAKE_FIND_USE_PACKAGE_ROOT_PATH FALSE)
set(CMAKE_FIND_USE_CMAKE_PATH TRUE)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

if("${CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT}")
    set(CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/cmake-install" CACHE PATH "..." FORCE)
endif()

include("util.cmake")
include("conan.cmake")

if(NOT DEFINED "CONAN_PROGRAM_PATH" AND NOT DEFINED "CONAN_COMMAND")
    set_conan_path(CONAN_PROGRAM_PATH "$ENV{PATH}")
    set_conan_command(CONAN_COMMAND "${CONAN_PROGRAM_PATH}")
elseif(NOT DEFINED "CONAN_COMMAND")
    set_conan_command(CONAN_COMMAND "${CONAN_PROGRAM_PATH}")
endif()

add_subdirectory("${PROJECT_NAME}-lib")
add_subdirectory("${PROJECT_NAME}-test")
add_subdirectory("${PROJECT_NAME}-package-test")
